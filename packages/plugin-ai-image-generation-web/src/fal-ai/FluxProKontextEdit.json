{
  "openapi": "3.0.4",
  "info": {
    "title": "Queue OpenAPI for fal-ai/flux-pro/kontext",
    "version": "1.0.0",
    "description": "",
    "x-fal-metadata": {
      "endpointId": "fal-ai/flux-pro/kontext",
      "category": "image-to-image",
      "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Training-2.jpg",
      "playgroundUrl": "https://fal.ai/models/fal-ai/flux-pro/kontext",
      "documentationUrl": "https://fal.ai/models/fal-ai/flux-pro/kontext/api"
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Fal Key"
      }
    },
    "schemas": {
      "QueueStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "IN_QUEUE",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "The request id."
          },
          "response_url": {
            "type": "string",
            "description": "The response url."
          },
          "status_url": {
            "type": "string",
            "description": "The status url."
          },
          "cancel_url": {
            "type": "string",
            "description": "The cancel url."
          },
          "logs": {
            "type": "object",
            "description": "The logs.",
            "additionalProperties": true
          },
          "metrics": {
            "type": "object",
            "description": "The metrics.",
            "additionalProperties": true
          },
          "queue_position": {
            "type": "integer",
            "description": "The queue position."
          }
        },
        "required": [
          "status",
          "request_id"
        ]
      },
      "FluxProKontextInput": {
        "x-fal-order-properties": [
          "image_url",
          "prompt"
        ],
        "type": "object",
        "properties": {
          "prompt": {
            "examples": [
              "Put a donut next to the flour."
            ],
            "description": "The prompt to generate an image from.",
            "type": "string",
            "maxLength": 5000,
            "minLength": 3,
            "x-imgly-builder": { "component": "TextArea" },
            "title": "Prompt"
          },
          "aspect_ratio": {
            "enum": [
              "21:9",
              "16:9",
              "4:3",
              "3:2",
              "1:1",
              "2:3",
              "3:4",
              "9:16",
              "9:21"
            ],
            "description": "The aspect ratio of the generated image.",
            "type": "string",
            "title": "Aspect Ratio"
          },
          "num_images": {
            "minimum": 1,
            "maximum": 4,
            "type": "integer",
            "description": "The number of images to generate.",
            "title": "Num Images",
            "default": 1
          },
          "output_format": {
            "enum": [
              "jpeg",
              "png"
            ],
            "description": "The format of the generated image.",
            "type": "string",
            "title": "Output Format",
            "default": "jpeg"
          },
          "image_url": {
            "examples": [
              "https://v3.fal.media/files/rabbit/rmgBxhwGYb2d3pl3x9sKf_output.png"
            ],
            "description": "Image prompt for the omni model.",
            "type": "string",
            "title": "Image URL"
          },
          "sync_mode": {
            "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
            "type": "boolean",
            "title": "Sync Mode",
            "default": false
          },
          "safety_tolerance": {
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ],
            "description": "The safety tolerance level for the generated image. 1 being the most strict and 5 being the most permissive.",
            "type": "string",
            "title": "Safety Tolerance",
            "default": "2"
          },
          "guidance_scale": {
            "minimum": 1,
            "maximum": 20,
            "type": "number",
            "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
            "title": "Guidance scale (CFG)",
            "default": 3.5
          },
          "seed": {
            "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same image every time.\n        ",
            "type": "integer",
            "title": "Seed"
          }
        },
        "title": "FluxKontextInput",
        "required": [
          "prompt",
          "image_url"
        ]
      },
      "FluxProKontextOutput": {
        "x-fal-order-properties": [
          "images",
          "timings",
          "seed",
          "has_nsfw_concepts",
          "prompt"
        ],
        "type": "object",
        "properties": {
          "prompt": {
            "description": "The prompt used for generating the image.",
            "type": "string",
            "title": "Prompt"
          },
          "images": {
            "examples": [
              [
                {
                  "height": 1024,
                  "url": "https://fal.media/files/tiger/7dSJbIU_Ni-0Zp9eaLsvR_fe56916811d84ac69c6ffc0d32dca151.jpg",
                  "width": 1024
                }
              ]
            ],
            "description": "The generated image files info.",
            "type": "array",
            "title": "Images",
            "items": {
              "$ref": "#/components/schemas/fal__toolkit__image__image__Image"
            }
          },
          "timings": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Timings"
          },
          "has_nsfw_concepts": {
            "description": "Whether the generated images contain NSFW concepts.",
            "type": "array",
            "title": "Has Nsfw Concepts",
            "items": {
              "type": "boolean"
            }
          },
          "seed": {
            "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        ",
            "type": "integer",
            "title": "Seed"
          }
        },
        "title": "FluxKontextOutput",
        "required": [
          "images",
          "timings",
          "seed",
          "has_nsfw_concepts",
          "prompt"
        ]
      },
      "fal__toolkit__image__image__Image": {
        "x-fal-order-properties": [
          "url",
          "content_type",
          "file_name",
          "file_size",
          "file_data",
          "width",
          "height"
        ],
        "type": "object",
        "description": "Represents an image file.",
        "title": "Image",
        "properties": {
          "file_size": {
            "examples": [
              4404019
            ],
            "description": "The size of the file in bytes.",
            "type": "integer",
            "title": "File Size"
          },
          "height": {
            "examples": [
              1024
            ],
            "description": "The height of the image in pixels.",
            "type": "integer",
            "title": "Height"
          },
          "url": {
            "description": "The URL where the file can be downloaded from.",
            "type": "string",
            "title": "Url"
          },
          "width": {
            "examples": [
              1024
            ],
            "description": "The width of the image in pixels.",
            "type": "integer",
            "title": "Width"
          },
          "file_name": {
            "examples": [
              "z9RV14K95DvU.png"
            ],
            "description": "The name of the file. It will be auto-generated if not provided.",
            "type": "string",
            "title": "File Name"
          },
          "content_type": {
            "examples": [
              "image/png"
            ],
            "description": "The mime type of the file.",
            "type": "string",
            "title": "Content Type"
          },
          "file_data": {
            "format": "binary",
            "description": "File data",
            "type": "string",
            "title": "File Data"
          }
        },
        "required": [
          "url"
        ]
      },
      "FluxProKontextEditInput": {
        "$ref": "#/components/schemas/FluxProKontextInput"
      }
    }
  },
  "paths": {
    "/fal-ai/flux-pro/kontext/requests/{request_id}/status": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          },
          {
            "name": "logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Whether to include logs (`1`) in the response or not (`0`)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/flux-pro/kontext/requests/{request_id}/cancel": {
      "put": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was cancelled successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/flux-pro/kontext": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FluxProKontextInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/flux-pro/kontext/requests/{request_id}": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FluxProKontextOutput"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://queue.fal.run"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}