{
  "openapi": "3.0.0",
  "info": {
    "title": "Fal Queue API",
    "version": "1.0.0",
    "description": "The Fal Queue API."
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Fal Key"
      }
    },
    "schemas": {
      "QueueStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["IN_QUEUE", "IN_PROGRESS", "COMPLETED"]
          },
          "request_id": { "type": "string", "description": "The request id." },
          "response_url": {
            "type": "string",
            "description": "The response url."
          },
          "status_url": { "type": "string", "description": "The status url." },
          "cancel_url": { "type": "string", "description": "The cancel url." },
          "logs": {
            "type": "object",
            "description": "The logs.",
            "additionalProperties": true
          },
          "metrics": {
            "type": "object",
            "description": "The metrics.",
            "additionalProperties": true
          },
          "queue_position": {
            "type": "integer",
            "description": "The queue position."
          }
        },
        "required": ["status", "request_id"]
      },
      "MinimaxVideo01LiveInput": {
        "title": "TextToVideoLiveRequest",
        "type": "object",
        "properties": {
          "prompt": { "title": "Prompt", "type": "string" },
          "prompt_optimizer": {
            "title": "Prompt Optimizer",
            "type": "boolean",
            "description": "Whether to use the model's prompt optimizer",
            "default": true
          }
        },
        "x-fal-order-properties": ["prompt"],
        "required": ["prompt"]
      },
      "MinimaxVideo01LiveOutput": {
        "title": "T2VLiveOutput",
        "type": "object",
        "properties": {
          "video": {
            "title": "Video",
            "description": "The generated video",
            "allOf": [{ "$ref": "#/components/schemas/File" }]
          }
        },
        "x-fal-order-properties": ["video"],
        "required": ["video"]
      },
      "File": {
        "title": "File",
        "type": "object",
        "properties": {
          "file_size": {
            "title": "File Size",
            "type": "integer",
            "description": "The size of the file in bytes."
          },
          "file_name": {
            "title": "File Name",
            "type": "string",
            "description": "The name of the file. It will be auto-generated if not provided."
          },
          "content_type": {
            "title": "Content Type",
            "type": "string",
            "description": "The mime type of the file."
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "The URL where the file can be downloaded from."
          },
          "file_data": {
            "format": "binary",
            "title": "File Data",
            "type": "string",
            "description": "File data"
          }
        },
        "x-fal-order-properties": [
          "url",
          "content_type",
          "file_name",
          "file_size",
          "file_data"
        ],
        "required": ["url"]
      }
    }
  },
  "paths": {
    "/fal-ai/minimax/video-01-live/requests/{request_id}/status": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "Request ID" }
          },
          {
            "name": "logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Whether to include logs (`1`) in the response or not (`0`)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/QueueStatus" }
              }
            }
          }
        }
      }
    },
    "/fal-ai/minimax/video-01-live/requests/{request_id}/cancel": {
      "put": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "Request ID" }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was cancelled successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/minimax/video-01-live": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MinimaxVideo01LiveInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/QueueStatus" }
              }
            }
          }
        }
      }
    },
    "/fal-ai/minimax/video-01-live/requests/{request_id}": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "Request ID" }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinimaxVideo01LiveOutput"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [{ "url": "https://queue.fal.run" }],
  "security": [{ "apiKeyAuth": [] }]
}
