{
  "openapi": "3.0.0",
  "info": {
    "title": "Fal Queue API",
    "version": "1.0.0",
    "description": "The Fal Queue API."
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Fal Key"
      }
    },
    "schemas": {
      "QueueStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["IN_QUEUE", "IN_PROGRESS", "COMPLETED"]
          },
          "request_id": {
            "type": "string",
            "description": "The request id."
          },
          "response_url": {
            "type": "string",
            "description": "The response url."
          },
          "status_url": {
            "type": "string",
            "description": "The status url."
          },
          "cancel_url": {
            "type": "string",
            "description": "The cancel url."
          },
          "logs": {
            "type": "object",
            "description": "The logs.",
            "additionalProperties": true
          },
          "metrics": {
            "type": "object",
            "description": "The metrics.",
            "additionalProperties": true
          },
          "queue_position": {
            "type": "integer",
            "description": "The queue position."
          }
        },
        "required": ["status", "request_id"]
      },
      "FluxProV11UltraInput": {
        "title": "FluxProUltraTextToImageInput",
        "type": "object",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string",
            "description": "The prompt to generate an image from."
          },
          "num_images": {
            "minimum": 1,
            "maximum": 4,
            "type": "integer",
            "title": "Num Images",
            "description": "The number of images to generate.",
            "default": 1
          },
          "aspect_ratio": {
            "anyOf": [
              {
                "enum": [
                  "21:9",
                  "16:9",
                  "4:3",
                  "3:2",
                  "1:1",
                  "2:3",
                  "3:4",
                  "9:16",
                  "9:21"
                ],
                "type": "string"
              },
              {
                "title": "Image",
                "type": "object",
                "properties": {
                  "height": {
                    "title": "Height",
                    "type": "integer"
                  },
                  "nested": {
                    "title": "NESTED",
                    "type": "object",
                    "properties": {
                      "nested": {
                        "title": "Nested",
                        "type": "integer"
                      },
                      "nestedFO": {
                        "title": "NestedFO",
                        "type": "integer"
                      }
                    }
                  },
                  "url": {
                    "title": "Url",
                    "type": "string"
                  },
                  "width": {
                    "title": "Width",
                    "type": "integer"
                  }
                },
                "x-fal-order-properties": [
                  "url",
                  "width",
                  "height",
                  "nested",
                  "content_type"
                ],
                "required": ["url", "width", "height"]
              },
              {
                "type": "string"
              }
            ],
            "title": "Aspect Ratio",
            "description": "The aspect ratio of the generated image.",
            "default": "16:9"
          },
          "output_format": {
            "enum": ["jpeg", "png"],
            "title": "Output Format",
            "type": "string",
            "description": "The format of the generated image.",
            "default": "jpeg"
          },
          "sync_mode": {
            "title": "Sync Mode",
            "type": "boolean",
            "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
            "default": false
          },
          "safety_tolerance": {
            "enum": ["1", "2", "3", "4", "5", "6"],
            "title": "Safety Tolerance",
            "type": "string",
            "description": "The safety tolerance level for the generated image. 1 being the most strict and 5 being the most permissive.",
            "default": "2"
          },
          "enable_safety_checker": {
            "title": "Enable Safety Checker",
            "type": "boolean",
            "description": "If set to true, the safety checker will be enabled.",
            "default": true
          },
          "seed": {
            "title": "Seed",
            "type": "integer",
            "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same image every time.\n        "
          },
          "raw": {
            "title": "Raw",
            "type": "boolean",
            "description": "Generate less processed, more natural-looking images.",
            "default": false
          }
        },
        "x-fal-order-properties": [
          "prompt",
          "seed",
          "sync_mode",
          "num_images",
          "enable_safety_checker",
          "safety_tolerance",
          "output_format",
          "aspect_ratio",
          "raw"
        ],
        "required": ["prompt"]
      },
      "FluxProV11UltraOutput": {
        "title": "Output",
        "type": "object",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string",
            "description": "The prompt used for generating the image."
          },
          "images": {
            "title": "Images",
            "type": "array",
            "description": "The generated image files info.",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "timings": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Timings"
          },
          "has_nsfw_concepts": {
            "title": "Has Nsfw Concepts",
            "type": "array",
            "description": "Whether the generated images contain NSFW concepts.",
            "items": {
              "type": "boolean"
            }
          },
          "seed": {
            "title": "Seed",
            "type": "integer",
            "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
          }
        },
        "x-fal-order-properties": [
          "images",
          "timings",
          "seed",
          "has_nsfw_concepts",
          "prompt"
        ],
        "required": ["images", "timings", "seed", "has_nsfw_concepts", "prompt"]
      },
      "Image": {
        "title": "Image",
        "type": "object",
        "properties": {
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "content_type": {
            "title": "Content Type",
            "type": "string",
            "default": "image/jpeg"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "x-fal-order-properties": ["url", "width", "height", "content_type"],
        "required": ["url", "width", "height"]
      }
    }
  },
  "paths": {
    "/fal-ai/flux-pro/v1.1-ultra/requests/{request_id}/status": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          },
          {
            "name": "logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Whether to include logs (`1`) in the response or not (`0`)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/flux-pro/v1.1-ultra/requests/{request_id}/cancel": {
      "put": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was cancelled successfully."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/flux-pro/v1.1-ultra": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FluxProV11UltraInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatus"
                }
              }
            }
          }
        }
      }
    },
    "/fal-ai/flux-pro/v1.1-ultra/requests/{request_id}": {
      "get": {
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Request ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FluxProV11UltraOutput"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://queue.fal.run"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}
